ggplot() +
geom_point(aes(x=dataset$Level, y=dataset$Salary),
color='red')+
geom_line(aes(x= x_grid, y=predict(regressor, newdata = data.frame(Level=6.5))),
color='Blue')+
ggtitle('True vs Bluff(Decision Tree)')+
xlab('Level')+
ylab('Salary')
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.01)
ggplot() +
geom_point(aes(x=dataset$Level, y=dataset$Salary),
color='red')+
geom_line(aes(x= x_grid, y=predict(regressor, newdata = data.frame(Level=6.5))),
color='Blue')+
ggtitle('True vs Bluff(Decision Tree)')+
xlab('Level')+
ylab('Salary')
library(ggplot2)
ggplot() +
geom_point(aes(x=dataset$Level, y=dataset$Salary),
color='red')+
geom_line(aes(x=dataset$Level, y=predict(regressor, newdata = dataset)),
color='Blue')+
ggtitle('True vs Bluff(Decision Tree)')+
xlab('Level')+
ylab('Salary')
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level),0.1)
ggplot()+
geom_point(aes(x=dataset$Level, y=dataset$Salary),
color='red')+
geom_line(aes(x= x_grid, y=predict(regressor, newdata = data.frame(Level=6.5))),
color='Blue')+
ggtitle('True vs Bluff(Decision Tree)')+
xlab('Level')+
ylab('Salary')
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level),0.1)
ggplot()+
geom_point(aes(x=dataset$Level, y=dataset$Salary),
color='red')+
geom_line(aes(x= x_grid, y=predict(regressor, newdata = data.frame(Level=6.5))),
color='Blue')+
ggtitle('True vs Bluff(Decision Tree)')+
xlab('Level')+
ylab('Salary')
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level),0.01)
ggplot()+
geom_point(aes(x=dataset$Level, y=dataset$Salary),
color='red')+
geom_line(aes(x= x_grid, y=predict(regressor, newdata = data.frame(Level=6.5))),
color='Blue')+
ggtitle('True vs Bluff(Decision Tree)')+
xlab('Level')+
ylab('Salary')
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level),0.01)
ggplot()+
geom_point(aes(x=dataset$Level, y=dataset$Salary),
color='red')+
geom_line(aes(x= x_grid, y=predict(regressor, newdata = data.frame(Level=6.5))),
color='Blue')+
ggtitle('True vs Bluff(Decision Tree)')+
xlab('Level')+
ylab('Salary')
dataset = read.csv('Position_Salaries.csv')
cls
setwd("~/Machine Learning/Machine+Learning+A-Z+(Codes+and+Datasets)/Machine Learning A-Z (Codes and Datasets)/Part 2 - Regression/Section 8 - Decision Tree Regression/R")
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
library(rpart)
regressor = rpart(formula = Salary ~ .,
data= dataset,
control = rpart.control(minsplit = 1))
y_pred = predict(regressor, data.frame(Level=6.5))
View(dataset)
regressor = rpart(formula = Salary ~ .,
data= dataset,
#control = rpart.control(minsplit = 1))
y_pred = predict(regressor, data.frame(Level=6.5))
regressor = rpart(formula = Salary ~ .,
data= dataset)
y_pred = predict(regressor, data.frame(Level=6.5))
# Decision Tree Regression
#Polynomial Regression
#Importing the dataset
dataset = read.csv('Position_Salaries.csv')
setwd("~/Machine Learning/Machine+Learning+A-Z+(Codes+and+Datasets)/Machine Learning A-Z (Codes and Datasets)/Part 2 - Regression/Section 8 - Decision Tree Regression/R")
dataset = read.csv('Position_Salaries.csv')
dataset = read.csv('Position_Salaries.csv')
View(dataset)
dataset = dataset[2:3]
library(rpart)
regressor = rpart(formula = Salary ~ .,
data= dataset,
control = rpart.control(minsplit = 1))
View(regressor)
y_pred = predict(regressor, data.frame(Level=6.5))
install.packages('rpart')
library(rpart)
regressor = rpart(formula = Salary ~ .,
data= dataset)
install.packages("rpart")
install.packages("rpart")
install.packages("rpart")
install.packages("rpart")
install.packages("rpart")
library(rpart)
regressor = rpart(formula = Salary ~ .,
data= dataset)
dataset = read.csv('Position_Salaries.csv')
#resetting the dataset to only the colmn that is needed
dataset = dataset[2:3]
install.packages('rpart')
library(rpart)
regressor = rpart(formula = Salary ~ .,
data= dataset)
install.packages("rpart")
library(rpart)
regressor = rpart(formula = Salary ~.,
data= dataset)
y_pred = predict(regressor, data.frame(Level=6.5))
library(ggplot2)
ggplot() +
geom_point(aes(x=dataset$Level, y=dataset$Salary),
color='red')+
geom_line(aes(x=dataset$Level, y=predict(regressor, newdata = dataset)),
color='Blue')+
ggtitle('True vs Bluff(Decision Tree)')+
xlab('Level')+
ylab('Salary')
library(rpart)
regressor = rpart(formula = Salary ~.,
data= dataset,
control = rpart.control(minsplit = 1))
library(ggplot2)
ggplot() +
geom_point(aes(x=dataset$Level, y=dataset$Salary),
color='red')+
geom_line(aes(x=dataset$Level, y=predict(regressor, newdata = dataset)),
color='Blue')+
ggtitle('True vs Bluff(Decision Tree)')+
xlab('Level')+
ylab('Salary')
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level),0.01)
ggplot()+
geom_point(aes(x=dataset$Level, y=dataset$Salary),
color='red')+
geom_line(aes(x= x_grid, y=predict(regressor, newdata = data.frame(Level=6.5))),
color='Blue')+
ggtitle('True vs Bluff(Decision Tree)')+
xlab('Level')+
ylab('Salary')
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level),0.1)
ggplot()+
geom_point(aes(x=dataset$Level, y=dataset$Salary),
color='red')+
geom_line(aes(x= x_grid, y=predict(regressor, newdata = data.frame(Level=6.5))),
color='Blue')+
ggtitle('True vs Bluff(Decision Tree)')+
xlab('Level')+
ylab('Salary')
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level),0.1)
ggplot()+
geom_point(aes(x=dataset$Level, y=dataset$Salary),
color='red')+
geom_line(aes(x= x_grid, y=predict(regressor, newdata = dataset)),
color='Blue')+
ggtitle('True vs Bluff(Decision Tree)')+
xlab('Level')+
ylab('Salary')
rlang
rlang::
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level),0.1)
ggplot()+
geom_point(aes(x=dataset$Level, y= predict(regressor, newdata = dataset)) ,
color='red')+
geom_line(aes(x= x_grid, y= newdata = dataset)),
color='Blue')+
ggtitle('True vs Bluff(Decision Tree)')+
xlab('Level')+
ylab('Salary')
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level),0.1)
ggplot()+
geom_point(aes(x=dataset$Level, y=dataset$Salary),
color='red')+
geom_line(aes(x= x_grid, y= predict(regressor, newdata = dataset)),
color='Blue')+
ggtitle('True vs Bluff(Decision Tree)')+
xlab('Level')+
ylab('Salary')
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot()+
geom_point(aes(x=dataset$Level, y=dataset$Salary),
color='red')+
geom_line(aes(x= x_grid, y= predict(regressor, newdata = dataset)),
color='Blue')+
ggtitle('True vs Bluff(Decision Tree)')+
xlab('Level')+
ylab('Salary')
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot()+
geom_point(aes(x=dataset$Level, y=dataset$Salary),
color='red')+
geom_line(aes(x= x_grid, y= predict(regressor, newdata = data.frame(Level=6.5))),
color='Blue')+
ggtitle('True vs Bluff(Decision Tree)')+
xlab('Level')+
ylab('Salary')
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot()+
geom_point(aes(x=dataset$Level, y=dataset$Salary),
color='red')+
geom_line(aes(x= x_grid, y= predict(regressor, newdata = data.frame(Level = 6.5))),
color='Blue')+
ggtitle('True vs Bluff(Decision Tree)')+
xlab('Level')+
ylab('Salary')
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot()+
geom_point(aes(x=dataset$Level, y=dataset$Salary),
color='red')+
geom_line(aes(x= x_grid, y= predict(regressor, newdata = data.frame(Level = (6.5)))),
color='Blue')+
ggtitle('True vs Bluff(Decision Tree)')+
xlab('Level')+
ylab('Salary')
ibrary(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot()+
geom_point(aes(x=dataset$Level, y=dataset$Salary),
color='red')+
geom_line(aes(x= x_grid, y= predict(regressor, newdata = data.frame(Level = 6.5))),
color='Blue')+
ggtitle('True vs Bluff(Decision Tree)')+
xlab('Level')+
ylab('Salary')
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot()+
geom_point(aes(x=dataset$Level, y=dataset$Salary),
color='red')+
geom_line(aes(x= x_grid, y= y_pred),
color='Blue')+
ggtitle('True vs Bluff(Decision Tree)')+
xlab('Level')+
ylab('Salary')
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot()+
geom_point(aes(x=dataset$Level, y=dataset$Salary),
color='red')+
geom_line(aes(x= x_grid, y= y_pred),
color='green')+
ggtitle('True vs Bluff(Decision Tree)')+
xlab('Level')+
ylab('Salary')
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot()+
geom_point(aes(x=dataset$Level, y=dataset$Salary),
color='red')+
geom_line(aes(x= x_grid, predict(regressor, data.frame(Level=6.5))),
color='Blue')+
ggtitle('True vs Bluff(Decision Tree)')+
xlab('Level')+
ylab('Salary')
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot()+
geom_point(aes(x=dataset$Level, y=dataset$Salary),
color='red')+
geom_line(aes(x= x_grid, predict(regressor, newdata = data.frame(Level=6.5))),
color='Blue')+
ggtitle('True vs Bluff(Decision Tree)')+
xlab('Level')+
ylab('Salary')
# Decision Tree Regression
#Polynomial Regression
#Importing the dataset
dataset = read.csv('Position_Salaries.csv')
#resetting the dataset to only the colmn that is needed
dataset = dataset[2:3]
#if d dataset is small no need to splt in test & train set
#Feature scaling is not required because a polynomial regression
#model is a multiple regression model with polynomial terms
#Building the regression model
#Fitting Decission Tree regression to the dataset
install.packages('rpart')
library(rpart)
regressor = rpart(formula = Salary ~.,
data= dataset,
control = rpart.control(minsplit = 1))
#Predicting a new result with Linear Regression
y_pred = predict(regressor, data.frame(Level=6.5))
#Visualise the Decision Tree regression Dataset
#install.packages('ggplot2')
library(ggplot2)
ggplot() +
geom_point(aes(x=dataset$Level, y=dataset$Salary),
color='red')+
geom_line(aes(x=dataset$Level, y=predict(regressor, newdata = dataset)),
color='Blue')+
ggtitle('True vs Bluff(Decision Tree)')+
xlab('Level')+
ylab('Salary')
#the model is not contionouis in DTR non linear and non contious
#for non linear and non contious take higher resoulition
#Visualise the Decision Tree regression Dataset(higher resolution)
#HIGHER Resolution
#install.packages('ggplot2')
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot()+
geom_point(aes(x=dataset$Level, y=dataset$Salary),
color='red')+
geom_line(aes(x= x_grid, predict(regressor, newdata = data.frame(Level=6.5))),
color='Blue')+
ggtitle('True vs Bluff(Decision Tree)')+
xlab('Level')+
ylab('Salary')
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot()+
geom_point(aes(x=dataset$Level, y=dataset$Salary),
color='red')+
geom_line(aes(x= x_grid, predict(regressor, newdata = data.frame(Level=6.5))),
color='Blue')+
ggtitle('True vs Bluff(Decision Tree)')+
xlab('Level')+
ylab('Salary')
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot()+
geom_point(aes(x=dataset$Level, y=dataset$Salary),
color='red')+
geom_line(aes(x= x_grid, predict(regressor, newdata = data.frame(level=6.5))),
color='Blue')+
ggtitle('True vs Bluff(Decision Tree)')+
xlab('Level')+
ylab('Salary')
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot()+
geom_point(aes(x=dataset$Level, y=dataset$Salary),
color='red')+
geom_line(aes(x= x_grid, predict(regressor, newdata = data.frame(Level=6.5))),
color='Blue')+
ggtitle('True vs Bluff(Decision Tree)')+
xlab('Level')+
ylab('Salary')
library(ggplot2)
ggplot() +
geom_point(aes(x=dataset$Level, y=dataset$Salary),
color='red')+
geom_line(aes(x=dataset$Level, y=predict(regressor, newdata = dataset)),
color='Blue')+
ggtitle('True vs Bluff(Decision Tree)')+
xlab('Level')+
ylab('Salary')
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
x_grid
ggplot()+
geom_point(aes(x=dataset$Level, y=dataset$Salary),
color='red')+
geom_line(aes(x= x_grid, predict(regressor, newdata = data.frame(Level=6.5))),
color='Blue')+
ggtitle('True vs Bluff(Decision Tree)')+
xlab('Level')+
ylab('Salary')
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot()+
geom_point(aes(x=dataset$Level, y=dataset$Salary),
color='red')+
geom_line(aes(x= x_grid, predict(regressor, newdata = dataset)),
color='Blue')+
ggtitle('True vs Bluff(Decision Tree)')+
xlab('Level')+
ylab('Salary')
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot()+
geom_point(aes(x=dataset$Level, y=dataset$Salary),
color='red')+
geom_line(aes(x= x_grid, y=predict(regressor, newdata = dataset)),
color='Blue')+
ggtitle('True vs Bluff(Decision Tree)')+
xlab('Level')+
ylab('Salary')
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot()+
geom_point(aes(x=dataset$Level, y=dataset$Salary),
color='red')+
geom_line(aes(x= x_grid, y=predict(regressor, newdata = dataset)),
color='Blue')+
ggtitle('True vs Bluff(Decision Tree)')+
xlab('Level')+
ylab('Salary')
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot()+
geom_point(aes(x=dataset$Level, y=dataset$Salary),
color='red')+
geom_line(aes(x= x_grid, y=predict(regressor, newdata = data.frame(Level = 6.5))),
color='Blue')+
ggtitle('True vs Bluff(Decision Tree)')+
xlab('Level')+
ylab('Salary')
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot()+
geom_point(aes(x=dataset$Level, y=dataset$Salary),
color='red')+
geom_line(aes(x= x_grid, y=predict(regressor, newdata = data.frame(data$Level = 6.5))),
color='Blue')+
ggtitle('True vs Bluff(Decision Tree)')+
xlab('Level')+
ylab('Salary')
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot()+
geom_point(aes(x=dataset$Level, y=dataset$Salary),
color='red')+
geom_line(aes(x= x_grid, y=predict(regressor, newdata = data.frame(levels(6.5)))),
color='Blue')+
ggtitle('True vs Bluff(Decision Tree)')+
xlab('Level')+
ylab('Salary')
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot()+
geom_point(aes(x=dataset$Level, y=dataset$Salary),
color='red')+
geom_line(aes(x= x_grid, y=predict(regressor, newdata = data.frame(Level=6.5))),
color='Blue')+
ggtitle('True vs Bluff(Decision Tree)')+
xlab('Level')+
ylab('Salary')
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot()+
geom_point(aes(x=dataset$Level, y=dataset$Salary),
color='red')+
geom_line(aes(x= x_grid, y=predict(regressor, newdata = data.frame(Level=6.5))),
color='Blue')+
ggtitle('True vs Bluff(Decision Tree)')+
xlab('Level')+
ylab('Salary')
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot()+
geom_point(aes(x=dataset$Level, y=dataset$Salary),
color='red')+
geom_line(aes(x= x_grid, y=predict(regressor, newdata = data.frame(Level = x_grid))),
color='Blue')+
ggtitle('True vs Bluff(Decision Tree)')+
xlab('Level')+
ylab('Salary')
summary(regressor)
y_pred = predict(regressor, data.frame(Level=6.5))
summary(regressor)
cls
clr
setwd("~/Machine Learning/Machine+Learning+A-Z+(Codes+and+Datasets)/Machine Learning A-Z (Codes and Datasets)/Part 2 - Regression/Section 9 - Random Forest Regression/R")
setwd("~/Machine Learning/Machine+Learning+A-Z+(Codes+and+Datasets)/Machine Learning A-Z (Codes and Datasets)/Part 2 - Regression/Section 9 - Random Forest Regression/R")
install.packages('randomForest')
library('randomForest')
library(randomForest)
regressor = randomForest()
setwd("~/Machine Learning/Machine+Learning+A-Z+(Codes+and+Datasets)/Machine Learning A-Z (Codes and Datasets)/Part 2 - Regression/Section 9 - Random Forest Regression/R")
#Importing the dataset
dataset = read.csv('Position_Salaries.csv')
#resetting the dataset to only the colmn that is needed
dataset = dataset[2:3]
install.packages('randomForest')
library(randomForest)
set.seed(1234)
regressor = randomForest(x=dataset[1], y=dataset$Salary,
ntree = 10)
install.packages("randomForest")
y_pred = predict(regressor, data.frame(Level=6.5))
install.packages('randomForest')
library(randomForest)
library(randomForest)
set.seed(1234)
regressor = randomForest(x=dataset[1], y=dataset$Salary,
ntree = 10)
#Predicting a new result with Linear Regression
y_pred = predict(regressor, data.frame(Level=6.5))
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot()+
geom_point(aes(x=dataset$Level, y=dataset$Salary),
color='red')+
geom_line(aes(x= x_grid, y=predict(regressor, newdata = data.frame(Level = x_grid))),
color='Blue')+
ggtitle('True vs Bluff(Decision Tree)')+
xlab('Level')+
ylab('Salary')
